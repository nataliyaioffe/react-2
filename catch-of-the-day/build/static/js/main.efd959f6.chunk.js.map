{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","e","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","_ref","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","orderTransitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeid","context","assertThisInitialized","sent","console","log","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","_this$props$fishDetai","fishDetails","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.efd959f6.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends Component {\n  static propTypes = {\n    history: PropTypes.object.isRequired\n  };\n\n  myInput = React.createRef();\n\n  goToStore = e => {\n    //1. stop form from submittng\n    e.preventDefault();\n    //2. get text from input\n    const storeName = this.myInput.current.value;\n    //3. change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n\n// STATELESS FUNCTIONAL COMPONENT\nconst Header = ({ tagline }) => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of \">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>\n        {tagline}\n      </span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\n\nexport default Header;\n\n// ABOVE IS REFACTORED VERSION OF BELOW\n\n// import React, { Component } from \"react\";\n\n// class Header extends Component {\n//   render() {\n//     return (\n//       <header className=\"top\">\n//         <h1>\n//           Catch\n//           <span className=\"ofThe\">\n//             <span className=\"of\">Of</span>\n//             <span className=\"the\">The</span>\n//           </span>\n//           Day\n//         </h1>\n//         <h3 className=\"tagline\">\n//           <span>{this.props.tagline}</span>\n//         </h3>\n//       </header>\n//     );\n//   }\n// }\n\n// export default Header;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends Component {\n  static propTypes = {\n    fishes: PropTypes.object.isRequired,\n    order: PropTypes.object.isRequired,\n    removeFromOrder: PropTypes.func.isRequired\n  };\n\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const orderTransitionOptions = {\n      classNames: \"order\",\n      key: key,\n      timeout: { enter: 500, exit: 500 }\n    };\n    // Make sure the fish is loaded before we continue!\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...orderTransitionOptions}>\n          <li key={key}>\n            Sorry, {fish ? fish.name : \"fish\"} is no longer available;\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...orderTransitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              Remove\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nclass AddFishForm extends Component {\n  static propTypes = {\n    addFish: PropTypes.func.isRequired\n  };\n\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  createFish = e => {\n    e.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // refresh the form\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      desc: PropTypes.string.isRequired,\n      status: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired\n    }),\n    index: PropTypes.string.isRequired,\n    updateFish: PropTypes.func.isRequired\n  };\n\n  handleChange = e => {\n    // update that fish\n    // 1. take a copy of the current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [e.currentTarget.name]: e.currentTarget.value\n    };\n    // send the updted fish to state (see \"update fish\" function in APP)\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button\n      className=\"github\"\n      onClick={() => props.authenticate(\"Github\")}\n    >\n      Log In With Github\n    </button>\n    <button\n      className=\"facebook\"\n      onClick={() => props.authenticate(\"Facebook\")}\n    >\n      Log In With Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n    authenticate: Proptypes.func.isRequired\n}\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyBQiBZQfopdOa_6_h2qQgQcpPPcmR_djSY\",\n  authDomain: \"catch-of-the-day-e8c8e.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-e8c8e.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// named export\nexport { firebaseApp };\n\n/// default export\n\nexport default base;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport firebase from \"firebase\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends Component {\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if(user) {\n        this.authHandler({ user });\n      }\n    })\n  }\n\n  static propTypes = {\n    fishes: PropTypes.object.isRequired,\n    updateFish: PropTypes.func.isRequired,\n    deleteFish: PropTypes.func.isRequired,\n    loadSampleFishes: PropTypes.func.isRequired\n  };\n\n  authHandler = async authData => {\n    // 1. look up current store in firebase database\n    const store = await base.fetch(this.props.storeid, { context: this });\n    console.log(store);\n\n    // 2. claim it if there is there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeid}/owner`, {\n        data: authData.user.uid\n      });\n    }\n\n    // 3. set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n\n    console.log(authData);\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({\n      uid: null\n    })\n  }\n\n  render() {\n\n    const logout = <button onClick={this.logout}>Log out!</button>\n\n    // 1. Check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // 2. Check if they are NOT the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry, you are not the owner.</p>\n          {logout}\n        </div>\n      );\n    }\n    // 3. They must be the owner, just render the inventory\n    return <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>;\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      desc: PropTypes.string.isRequired,\n      status: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired\n    }),\n    addToOrder: PropTypes.func.isRequired\n  };\n  handleClick = () => {\n    this.props.addToOrder(this.props.index);\n  };\n\n  render() {\n    const { image, name, price, desc, status } = this.props.fishDetails;\n\n    const isAvailable = status === \"available\";\n\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">{name}</h3>\n        <span className=\"price\">{formatPrice(price)}</span>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={this.handleClick}>\n          {isAvailable ? \"Add To Order\" : \"Sold Out\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object.isRequired\n  };\n\n  // sync app's state to the to the specific store's \"fishes\" database reference\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localStorage (previous data before refresh)\n    const localStorageRef = localStorage.getItem(params.storeid);\n    if (localStorageRef) {\n      this.setState({\n        // local storage is a STRING right now, so we turn it back into an object with JSON.parse\n        order: JSON.parse(localStorageRef)\n      });\n    }\n    this.ref = base.syncState(`${params.storeid}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentDidUpdate() {\n    const { params } = this.props.match;\n    // local storage is key/value pair. Here, key is the store ID, and value is our order in state (which is an object). But local storage is expecting a STRING, so we need to convert to a strong with JSON.stringify.\n    localStorage.setItem(params.storeid, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // 1. take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. set the new fishes object to state\n    this.setState({\n      fishes: fishes\n    });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. update that state\n    fishes[key] = updatedFish;\n    // 3. set that to state\n    this.setState({\n      fishes: fishes\n    });\n  };\n\n  deleteFish = key => {\n    // 1.take a copy of state\n    const fishes = { ...this.state.fishes };\n    // 2. update the state\n    fishes[key] = null;\n    // 3. update state\n    this.setState({\n      fishes: fishes\n    });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: sampleFishes\n    });\n  };\n\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({\n      order: order\n    });\n  };\n\n  removeFromOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. remove item from order. can use \"delete\" bc we are not mirroring in firebase -- firebase doesn't have the order anyway\n    delete order[key];\n    // 3. Call setState to update our state object\n    this.setState({\n      order: order\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                fishDetails={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeid={this.props.match.params.storeid}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found!?!?!?</h2>\n    </div>\n);\n\nexport default NotFound;","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker}/>\n      <Route path=\"/store/:storeid\" component={App}/>\n      <Route component={NotFound}/>\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}